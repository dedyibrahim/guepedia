{"version":3,"sources":["lazyload.js"],"names":["global","factory","exports","_typeof","module","define","amd","LazyLoad","this","revealElement","element","instance","force","callbackIfSet","settings","callback_enter","managedTags","tagName","setSources","setWasProcessedData","callback_set","defaultSettings","elements_selector","container","document","threshold","thresholds","data_src","data_srcset","data_sizes","data_bg","class_loading","class_loaded","class_error","load_delay","callback_load","callback_error","to_webp","customSettings","_extends","timeoutDataName","attribute","trueString","setData","getAttribute","dataPrefix","attrName","value","removeAttribute","getData","setTimeoutData","getWasProcessedData","getTimeoutData","elements","elementToPurge","createInstance","filter","classObj","options","event","detail","createEvent","initCustomEvent","window","replaceExtToWebp","condition","length","runningOnBrowser","detectWebp","createElement","navigator","userAgent","canvas","toDataURL","supportsClassList","supportsWebp","optionsItem","indexOf","setSourcesInChildren","parentTag","dataAttrName","toWebpFlag","childTag","i","children","attrValue","setAttributeIfValue","setAttribute","srcDataValue","bgDataValue","backgroundImage","setValue","style","IMG","IFRAME","srcsetDataName","parent","parentNode","sizesDataValue","srcsetDataValue","VIDEO","srcDataName","load","_settings","setSourcesFunction","setSourcesFunctions","_updateLoadingCount","purgeOneElement","_elements","setSourcesBgImage","className","classList","add","remove","replace","RegExp","callback","argument","genericLoadEventName","removeEventListener","eventName","addEventListeners","addEventListener","loadHandler","errorHandler","removeEventListeners","success","removeClass","addClass","addOneShotEventListeners","eventHandler","observer","loadAndUnobserve","cancelDelayLoad","timeoutId","clearTimeout","delayLoad","loadDelay","setTimeout","getObserverSettings","entry","isIntersecting","intersectionRatio","rootMargin","root","getInstanceSettings","_setObserver","_loadingCount","update","_manageIntersection","_observer","target","entries","forEach","bind","supportsIntersectionObserver","IntersectionObserver","_onIntersection","plusMinus","nodeSet","querySelectorAll","purgeProcessedElements","Array","prototype","slice","call","isBot","destroy","_this","observe","loadAll","_this2","unobserve","_this3","autoInitialize","lazyLoadOptions"],"mappings":"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","file":"lazyload.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.LazyLoad = factory());\n}(this, (function () { 'use strict';\n\nconst defaultSettings = {\n\telements_selector: \"img\",\n\tcontainer: document,\n\tthreshold: 300,\n\tthresholds: null,\n\tdata_src: \"src\",\n\tdata_srcset: \"srcset\",\n\tdata_sizes: \"sizes\",\n\tdata_bg: \"bg\",\n\tclass_loading: \"loading\",\n\tclass_loaded: \"loaded\",\n\tclass_error: \"error\",\n\tload_delay: 0,\n\tcallback_load: null,\n\tcallback_error: null,\n\tcallback_set: null,\n\tcallback_enter: null,\n\tcallback_finish: null,\n\tto_webp: false\n};\n\nvar getInstanceSettings = customSettings => {\n\treturn Object.assign({}, defaultSettings, customSettings);\n};\n\nconst dataPrefix = \"data-\";\nconst processedDataName = \"was-processed\";\nconst timeoutDataName = \"ll-timeout\";\nconst trueString = \"true\";\n\nconst getData = (element, attribute) => {\n\treturn element.getAttribute(dataPrefix + attribute);\n};\n\nconst setData = (element, attribute, value) => {\n\tvar attrName = dataPrefix + attribute;\n\tif (value === null) {\n\t\telement.removeAttribute(attrName);\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, value);\n};\n\nconst setWasProcessedData = element =>\n\tsetData(element, processedDataName, trueString);\n\nconst getWasProcessedData = element =>\n\tgetData(element, processedDataName) === trueString;\n\nconst setTimeoutData = (element, value) =>\n\tsetData(element, timeoutDataName, value);\n\nconst getTimeoutData = element => getData(element, timeoutDataName);\n\nconst purgeProcessedElements = elements => {\n\treturn elements.filter(element => !getWasProcessedData(element));\n};\n\nconst purgeOneElement = (elements, elementToPurge) => {\n\treturn elements.filter(element => element !== elementToPurge);\n};\n\n/* Creates instance and notifies it through the window element */\nconst createInstance = function(classObj, options) {\n\tvar event;\n\tlet eventString = \"LazyLoad::Initialized\";\n\tlet instance = new classObj(options);\n\ttry {\n\t\t// Works in modern browsers\n\t\tevent = new CustomEvent(eventString, { detail: { instance } });\n\t} catch (err) {\n\t\t// Works in Internet Explorer (all versions)\n\t\tevent = document.createEvent(\"CustomEvent\");\n\t\tevent.initCustomEvent(eventString, false, false, { instance });\n\t}\n\twindow.dispatchEvent(event);\n};\n\n/* Auto initialization of one or more instances of lazyload, depending on the \n    options passed in (plain object or an array) */\nfunction autoInitialize(classObj, options) {\n\tif (!options) {\n\t\treturn;\n\t}\n\tif (!options.length) {\n\t\t// Plain object\n\t\tcreateInstance(classObj, options);\n\t} else {\n\t\t// Array of objects\n\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\n\t\t\tcreateInstance(classObj, optionsItem);\n\t\t}\n\t}\n}\n\nconst replaceExtToWebp = (value, condition) =>\n\tcondition ? value.replace(/\\.(jpe?g|png)/gi, \".webp\") : value;\n\nconst detectWebp = () => {\n\tvar webpString = \"image/webp\";\n\tvar canvas = document.createElement(\"canvas\");\n\n\tif (canvas.getContext && canvas.getContext(\"2d\")) {\n\t\treturn canvas.toDataURL(webpString).indexOf(`data:${webpString}`) === 0;\n\t}\n\n\treturn false;\n};\n\nconst runningOnBrowser = typeof window !== \"undefined\";\n\nconst isBot =\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\n\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\n\nconst supportsIntersectionObserver =\n\trunningOnBrowser && \"IntersectionObserver\" in window;\n\nconst supportsClassList =\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst supportsWebp = runningOnBrowser && detectWebp();\n\nconst setSourcesInChildren = function(\n\tparentTag,\n\tattrName,\n\tdataAttrName,\n\ttoWebpFlag\n) {\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\n\t\tif (childTag.tagName === \"SOURCE\") {\n\t\t\tlet attrValue = getData(childTag, dataAttrName);\n\t\t\tsetAttributeIfValue(childTag, attrName, attrValue, toWebpFlag);\n\t\t}\n\t}\n};\n\nconst setAttributeIfValue = function(\n\telement,\n\tattrName,\n\tvalue,\n\ttoWebpFlag\n) {\n\tif (!value) {\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, replaceExtToWebp(value, toWebpFlag));\n};\n\nconst setSourcesImg = (element, settings) => {\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\n\tconst srcsetDataName = settings.data_srcset;\n\tconst parent = element.parentNode;\n\n\tif (parent && parent.tagName === \"PICTURE\") {\n\t\tsetSourcesInChildren(parent, \"srcset\", srcsetDataName, toWebpFlag);\n\t}\n\tconst sizesDataValue = getData(element, settings.data_sizes);\n\tsetAttributeIfValue(element, \"sizes\", sizesDataValue);\n\tconst srcsetDataValue = getData(element, srcsetDataName);\n\tsetAttributeIfValue(element, \"srcset\", srcsetDataValue, toWebpFlag);\n\tconst srcDataValue = getData(element, settings.data_src);\n\tsetAttributeIfValue(element, \"src\", srcDataValue, toWebpFlag);\n};\n\nconst setSourcesIframe = (element, settings) => {\n\tconst srcDataValue = getData(element, settings.data_src);\n\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\n};\n\nconst setSourcesVideo = (element, settings) => {\n\tconst srcDataName = settings.data_src;\n\tconst srcDataValue = getData(element, srcDataName);\n\n\tsetSourcesInChildren(element, \"src\", srcDataName);\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\n\telement.load();\n};\n\nconst setSourcesBgImage = (element, settings) => {\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\n\tconst srcDataValue = getData(element, settings.data_src);\n\tconst bgDataValue = getData(element, settings.data_bg);\n\n\tif (srcDataValue) {\n\t\tlet setValue = replaceExtToWebp(srcDataValue, toWebpFlag);\n\t\telement.style.backgroundImage = `url(\"${setValue}\")`;\n\t}\n\n\tif (bgDataValue) {\n\t\tlet setValue = replaceExtToWebp(bgDataValue, toWebpFlag);\n\t\telement.style.backgroundImage = setValue;\n\t}\n};\n\nconst setSourcesFunctions = {\n\tIMG: setSourcesImg,\n\tIFRAME: setSourcesIframe,\n\tVIDEO: setSourcesVideo\n};\n\nconst setSources = (element, instance) => {\n\tconst settings = instance._settings;\n\tconst tagName = element.tagName;\n\tconst setSourcesFunction = setSourcesFunctions[tagName];\n\tif (setSourcesFunction) {\n\t\tsetSourcesFunction(element, settings);\n\t\tinstance._updateLoadingCount(1);\n\t\tinstance._elements = purgeOneElement(instance._elements, element);\n\t\treturn;\n\t}\n\tsetSourcesBgImage(element, settings);\n};\n\nconst addClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.add(className);\n\t\treturn;\n\t}\n\telement.className += (element.className ? \" \" : \"\") + className;\n};\n\nconst removeClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.remove(className);\n\t\treturn;\n\t}\n\telement.className = element.className.\n\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\n\t\treplace(/^\\s+/, \"\").\n\t\treplace(/\\s+$/, \"\");\n};\n\nconst callbackIfSet = (callback, argument) => {\n\tif (callback) {\n\t\tcallback(argument);\n\t}\n};\n\nconst genericLoadEventName = \"load\";\nconst mediaLoadEventName = \"loadeddata\";\nconst errorEventName = \"error\";\n\nconst addEventListener = (element, eventName, handler) => {\n\telement.addEventListener(eventName, handler);\n};\n\nconst removeEventListener = (element, eventName, handler) => {\n\telement.removeEventListener(eventName, handler);\n};\n\nconst addEventListeners = (element, loadHandler, errorHandler) => {\n\taddEventListener(element, genericLoadEventName, loadHandler);\n\taddEventListener(element, mediaLoadEventName, loadHandler);\n\taddEventListener(element, errorEventName, errorHandler);\n};\n\nconst removeEventListeners = (element, loadHandler, errorHandler) => {\n\tremoveEventListener(element, genericLoadEventName, loadHandler);\n\tremoveEventListener(element, mediaLoadEventName, loadHandler);\n\tremoveEventListener(element, errorEventName, errorHandler);\n};\n\nconst eventHandler = function(event, success, instance) {\n\tvar settings = instance._settings;\n\tconst className = success ? settings.class_loaded : settings.class_error;\n\tconst callback = success ? settings.callback_load : settings.callback_error;\n\tconst element = event.target;\n\n\tremoveClass(element, settings.class_loading);\n\taddClass(element, className);\n\tcallbackIfSet(callback, element);\n\n\tinstance._updateLoadingCount(-1);\n};\n\nconst addOneShotEventListeners = (element, instance) => {\n\tconst loadHandler = event => {\n\t\teventHandler(event, true, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\tconst errorHandler = event => {\n\t\teventHandler(event, false, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\taddEventListeners(element, loadHandler, errorHandler);\n};\n\nconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\n\nconst loadAndUnobserve = (element, observer, instance) => {\n\trevealElement(element, instance);\n\tobserver.unobserve(element);\n};\n\nconst cancelDelayLoad = element => {\n\tvar timeoutId = getTimeoutData(element);\n\tif (!timeoutId) {\n\t\treturn; // do nothing if timeout doesn't exist\n\t}\n\tclearTimeout(timeoutId);\n\tsetTimeoutData(element, null);\n};\n\nconst delayLoad = (element, observer, instance) => {\n\tvar loadDelay = instance._settings.load_delay;\n\tvar timeoutId = getTimeoutData(element);\n\tif (timeoutId) {\n\t\treturn; // do nothing if timeout already set\n\t}\n\ttimeoutId = setTimeout(function() {\n\t\tloadAndUnobserve(element, observer, instance);\n\t\tcancelDelayLoad(element);\n\t}, loadDelay);\n\tsetTimeoutData(element, timeoutId);\n};\n\nfunction revealElement(element, instance, force) {\n\tvar settings = instance._settings;\n\tif (!force && getWasProcessedData(element)) {\n\t\treturn; // element has already been processed and force wasn't true\n\t}\n\tcallbackIfSet(settings.callback_enter, element);\n\tif (managedTags.indexOf(element.tagName) > -1) {\n\t\taddOneShotEventListeners(element, instance);\n\t\taddClass(element, settings.class_loading);\n\t}\n\tsetSources(element, instance);\n\tsetWasProcessedData(element);\n\tcallbackIfSet(settings.callback_set, element);\n}\n\n/* entry.isIntersecting needs fallback because is null on some versions of MS Edge, and\n   entry.intersectionRatio is not enough alone because it could be 0 on some intersecting elements */\nconst isIntersecting = entry =>\n\tentry.isIntersecting || entry.intersectionRatio > 0;\n\nconst getObserverSettings = settings => ({\n\troot: settings.container === document ? null : settings.container,\n\trootMargin: settings.thresholds || settings.threshold + \"px\"\n});\n\nconst LazyLoad = function(customSettings, elements) {\n\tthis._settings = getInstanceSettings(customSettings);\n\tthis._setObserver();\n\tthis._loadingCount = 0;\n\tthis.update(elements);\n};\n\nLazyLoad.prototype = {\n\t_manageIntersection: function(entry) {\n\t\tvar observer = this._observer;\n\t\tvar loadDelay = this._settings.load_delay;\n\t\tvar element = entry.target;\n\n\t\t// WITHOUT LOAD DELAY\n\t\tif (!loadDelay) {\n\t\t\tif (isIntersecting(entry)) {\n\t\t\t\tloadAndUnobserve(element, observer, this);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// WITH LOAD DELAY\n\t\tif (isIntersecting(entry)) {\n\t\t\tdelayLoad(element, observer, this);\n\t\t} else {\n\t\t\tcancelDelayLoad(element);\n\t\t}\n\t},\n\n\t_onIntersection: function(entries) {\n\t\tentries.forEach(this._manageIntersection.bind(this));\n\t},\n\n\t_setObserver: function() {\n\t\tif (!supportsIntersectionObserver) {\n\t\t\treturn;\n\t\t}\n\t\tthis._observer = new IntersectionObserver(\n\t\t\tthis._onIntersection.bind(this),\n\t\t\tgetObserverSettings(this._settings)\n\t\t);\n\t},\n\n\t_updateLoadingCount: function(plusMinus) {\n\t\tthis._loadingCount += plusMinus;\n\t\tif (this._elements.length === 0 && this._loadingCount === 0) {\n\t\t\tcallbackIfSet(this._settings.callback_finish);\n\t\t}\n\t},\n\n\tupdate: function(elements) {\n\t\tconst settings = this._settings;\n\t\tconst nodeSet =\n\t\t\telements ||\n\t\t\tsettings.container.querySelectorAll(settings.elements_selector);\n\n\t\tthis._elements = purgeProcessedElements(\n\t\t\tArray.prototype.slice.call(nodeSet) // NOTE: nodeset to array for IE compatibility\n\t\t);\n\n\t\tif (isBot || !this._observer) {\n\t\t\tthis.loadAll();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._elements.forEach(element => {\n\t\t\tthis._observer.observe(element);\n\t\t});\n\t},\n\n\tdestroy: function() {\n\t\tif (this._observer) {\n\t\t\tthis._elements.forEach(element => {\n\t\t\t\tthis._observer.unobserve(element);\n\t\t\t});\n\t\t\tthis._observer = null;\n\t\t}\n\t\tthis._elements = null;\n\t\tthis._settings = null;\n\t},\n\n\tload: function(element, force) {\n\t\trevealElement(element, this, force);\n\t},\n\n\tloadAll: function() {\n\t\tvar elements = this._elements;\n\t\telements.forEach(element => {\n\t\t\tthis.load(element);\n\t\t});\n\t}\n};\n\n/* Automatic instances creation if required (useful for async script loading) */\nif (runningOnBrowser) {\n\tautoInitialize(LazyLoad, window.lazyLoadOptions);\n}\n\nreturn LazyLoad;\n\n})));\n"]}